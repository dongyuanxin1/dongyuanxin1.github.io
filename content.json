{"pages":[],"posts":[{"title":"🔝2020，让我们从头来过","text":"随着前端技术的火速发展，越来越多的新技术映入眼帘。每个人的精力都是有限的，如何在面对新技术的时候能触类旁通、快速学习？ 对于新的技术，扎实的 JS 基础能帮助我们快速上手，而对算法和数据结构的熟悉能加快理解新技术的原理设计 …… 域名 xxoo521.com 只是噱头，最重要的是好记，减少记忆成本。希望能在学习过程中放松一下，博君一笑！ 20192019 年十二月份，北方正值最冷的时候，在深圳依然 20 多度短袖出门。这一年，我如愿以偿拿到了 B（bytedance）、A（alibaba）、T（tencent）三家的 Offer。由于是双学位（计算机科学+数学），需要完成 2 篇毕设，只能选择回校专心做毕设。 这一年，既有对技术的狂热追求，也有参与团队项目的合作协同。有幸遇到两位师傅以及团队中的小伙伴，倾囊相助，带我“打怪升级”。有太多感谢的话想对帮助过我的朋友说，有时间会专门写一篇文章。 这篇文章当然不是讲 2019 年的技术之路，而是想谈谈为什么要做 xxoo521.com 这个博客。 没有银弹今年，我开过很多网站应用，vue、react、hexo、vuepress、next、小程序甚至小游戏，渐渐发现没有一种技术是银弹，要在对应场景下选择最适合的“开发工具”。 注意力重新回到在静态网站应用开发上。 之前的xin-tan.com从 hexo 重构到 vuepress，并且基于插件、组件、继承等机制实现了高度定制。它的出发点从建站开始就敲定了：搭建前端知识网络。因此，所有的文章都会被规约到现有网络的某个分类中，逻辑清晰，读者阅读成本低，尤其适合在面试前回顾相应的知识点。 而随着前端技术的火速发展，越来越多的新技术映入眼帘。每个人的精力都是有限的，如何在面对新技术的时候能触类旁通、快速学习？这是个老生常谈的话题。 以 ReactJS 为例，如果你深入了解过 Diff 的原理，你会发现其中的精髓就是图的节点遍历，并且通过“剪枝”思想降低了时间复杂度。如果你手写过 Promise，你会发现它的本质就是“状态机”。如果你了解 Nodejs 的 Cluster，你会发现它的实现就是“轮询调度”算法。如果了解过 hook 的原理、koa 的设计、上千字段的表格字段联动优化等等这些听起来“高大上”的东西，你会发现其背后是我们常常谈及，却也经常忽略的算法和数据结构的应用。 对于新的技术，扎实的 JS 基础能帮助我们快速上手，而对算法和数据结构的熟悉能加快理解新技术的原理设计。平日工作中，经常撸码的前端 er 肯定会对 js 越来越熟悉，是一种下意识的“刻意训练”。但不是所有的工作都需要用到一些经典的算法或数据结构，大多数情况下哈希表和数组能解决大多数问题，二叉树、并查集、AVL、回溯剪枝、动态规划等几乎难以遇到。 为了保持对算法和数据结构的应用的“刻意训练”，我重启了吃灰已久的 Leetcode 账号，开始坚持每日刷题（并逐渐上头）。过程中发现优雅的 js 实现少之又少（可能后端同学刷题多一些），Java、c++和 python 都多于 js。本着帮助别人，督促自己的想法，以及算法类文章自带多个标签，所以选定了用 hexo 来建立新站。 xin-tan.com 专注前端，xxoo521.com 专注算法。 从头来过根据谷歌分析给出的数据，xin-tan.com 的月用户稳定在了 5000-7000 ，新开一个站估计会来看的小伙伴会少的可怜。对于爱交流（话多）的我来说，称得上是“从头来过”，我也做好僵尸站的准备了。 前面也有讲过，xin-tan.com搭建的是前端知识网络。所以一直增加文章，尽可能在收归在某篇原来的文章中，最大化地避免水文。xxoo521.com 达到干货满满，还有很长路要走。 算法题做多了，腿也不疼了，腰也不酸了，脑瓜也感觉更加灵光，但是脱发确实是个问题。保证每份代码都是 AC，尽可能用简单话语说明白解题思路以及相关的知识点。快乐学习，一起进步，共同成长。 域名真的好记域名 xxoo521.com 只是噱头，最重要的是好记，减少记忆成本。希望能在学习过程中放松一下，博君一笑！","link":"/2019-12-19-let-us-restart/"},{"title":"如何保持保持高效学习？","text":"这是我最近特别想记录的心得，关于「如何保持高效学习」。 在从公司离职后回校作毕业设计的很长一段时间内，我都在不停地滑水。所谓学习 1 小时，摸鱼 2 小时。除了坚持每周三次的健身，自己给自己制定的学习任务，双 11 囤下来书，都是进展缓慢。 不像在公司那样，周围同事都很努力，到处弥漫着积极上进的氛围。学校里面大多数时间是自己独自一人在搞事情，没有监督，没有比较，自然严重缺乏动力。 所以，我意识到确实是要作出一些改变了。 这是我最近特别想记录的心得，关于「如何保持高效学习」。 最近在从公司离职后回校作毕业设计的很长一段时间内，我都在不停地滑水。所谓学习 1 小时，摸鱼 2 小时。除了坚持每周三次的健身，自己给自己制定的学习任务，双 11 囤下来书，都是进展缓慢。 不像在公司那样，周围同事都很努力，到处弥漫着积极上进的氛围。学校里面大多数时间是自己独自一人在搞事情，没有监督，没有比较，自然严重缺乏动力。 所以，我意识到确实是要作出一些改变了。 制定任务，模拟奖励根据这几个月重新玩「神武」（一款类似梦幻西游的回合制游戏）的感触，我发现这款游戏让人上瘾的点在于：你可以通过做任务/参见活动，获得各种奖励，并且提高人物的属性面板。我天，仔细想了下这不是和自我学习有点相似？ 于是我尝试着给自己制定每周任务，像「实现 promise」、「计算机专业论文算法完成」、「数学专业完成矩阵特征值的 4 中方法编程实现」。 有了任务，怎么模拟奖励呢？游戏给我的奖励是「提高人物属性」，潜意识里就是告诉玩家“你在变强”。思路转化过来就是，模拟的奖励需要让我自己感觉我在变强：）因此模拟的奖励是： 技术面变广，技术栈变深 定期将所学输出文章，方便日后回查，也打造个人 IP 早做完毕设，早回公司，脱离无 💰 生活 番茄学习仔细玩游戏你会发现，游戏的大多数任务和活动，都是玩家 10-20 分钟之间可以完成的。如果一个任务做了 2 小时，任谁都会感觉又累又烦。在学习过程中同样如此，一个学习任务一下午，状态差的时候，特别容易去知乎、v2 等论坛摸鱼。 说白了，还是注意力没法长时间集中的问题。 后来同学给安利了「番茄学习法」，我之前虽然也有了解过，但是没有实践。这次到 App Store 中找了个软件下来用了下。大概就是下图的样子： 我今天学习了 4 个番茄，每个番茄是 35 分钟（刚开始是 25 分钟，养成习惯后，注意力集中的时间慢慢增加），每次学习后都会有 8 分钟休息时间。循环往复，半天就过去了。以番茄为计时单位，多个任务可以切换着做，来防止松懈疲惫。 希望这篇心得对你有帮助","link":"/2019-11-25-how-insist-on-learning/"}],"tags":[],"categories":[{"name":"想法","slug":"想法","link":"/categories/%E6%83%B3%E6%B3%95/"}]}